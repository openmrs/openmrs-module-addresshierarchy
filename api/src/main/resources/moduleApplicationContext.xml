<?xml version="1.0" encoding="UTF-8"?>

<!-- Beans to add to the current Application context definition -->
  
<!--  include context for annotation mapping -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-2.0.xsd">

		
	<bean parent="serviceContext">
		<property name="moduleService">
	   		<list>
				<value>org.openmrs.module.addresshierarchy.service.AddressHierarchyService</value> 
				<bean class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
					<property name="transactionManager"><ref bean="transactionManager"/></property>
					<property name="target">
						<bean class="org.openmrs.module.addresshierarchy.service.AddressHierarchyServiceImpl">
							<property name="addressHierarchyDAO">
								<bean class="org.openmrs.module.addresshierarchy.db.hibernate.HibernateAddressHierarchyDAO">
									<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
								</bean>
							</property>	
						</bean>
					</property>
					<property name="preInterceptors">
							<ref bean="serviceInterceptors"/>  <!--  handles common metadata fields -->
					</property>
					<property name="transactionAttributeSource">
						<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
					</property>
				</bean>
		   </list>
		</property>
    </bean>

	<!-- configure the listener that resets the full address cache as needed -->
	<bean id="AddressCacheResetSupport" parent="openmrsEventListeners">
	    <property name="globalPropertyListeners">
	        <list value-type="org.openmrs.api.GlobalPropertyListener" merge="true">
	            <bean class="org.openmrs.module.addresshierarchy.AddressCacheResetSupport" />
	        </list>
	    </property>
	</bean>	
	
	<!--  configure the task that initializes the full address cache if needed -->
	<bean id="initializeFullAddressCacheTask" class="org.openmrs.module.addresshierarchy.scheduler.InitializeFullAddressCacheTask"/>
	
	<bean id="initializeFullAddressCacheTimerTask" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">
	    <property name="delay" value="1200000" /> <!-- wait 20 minutes before running the first time (since we load the cache on startup) -->
	    <property name="period" value="600000" /> <!-- run every 10 minutes -->
	    <property name="runnable" ref="initializeFullAddressCacheTask"/>
	</bean>
	
	<bean id="addressHierarchyTimerFactory" class="org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean">
	    <property name="scheduledExecutorTasks">
	        <list>
	            <ref bean="initializeFullAddressCacheTimerTask"/>
	        </list>
	    </property>
	</bean>
	
</beans>
